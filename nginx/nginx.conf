server {
  listen 0.0.0.0:$PORT;

  root   /usr/share/nginx/html;
  #autoindex on;
  #index  index.html index.htm;

  include /etc/nginx/http-security-headers.conf;


#   location ~* \.(?:manifest|appcache|html?|xml|json)$ {
#     include /etc/nginx/cors-settings.conf;
#     expires -1;
#     # access_log logs/static.log; # I don't usually include a static log
#   }

  location ^~ /configuration {
    include /etc/nginx/cors-settings.conf;
    # kill cache
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
  }


  # Media: images, icons, video, audio, HTC
#   location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
#     include /etc/nginx/cors-settings.conf;
#     expires 1M;
#     access_log off;
#     add_header Cache-Control "public";
#   }

#   location ~* \.(?:css|js)$ {
#     include /etc/nginx/cors-settings.conf;
#     try_files $uri =404;
#     expires 1y;
#     access_log off;
#     add_header Cache-Control "public";
#   }

  location / {
    include /etc/nginx/cors-settings.conf;
	try_files $uri /index.html;
  }
  # Any route containing a file extension (e.g. /devicesfile.js)
  location ~ ^.+\..+$ {
    include /etc/nginx/cors-settings.conf;
    try_files $uri =404;
  }
  
  
  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}